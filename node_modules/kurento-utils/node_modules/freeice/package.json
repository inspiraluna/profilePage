{
  "name": "freeice",
  "version": "2.2.0",
  "description": "Get free, randomized STUN and TURN servers for your WebRTC application",
  "main": "index.js",
  "scripts": {
    "test": "node test/all.js",
    "gendocs": "gendocs > README.md"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/DamonOehlman/freeice.git"
  },
  "stability": "unstable",
  "keywords": [
    "webrtc",
    "ice",
    "stun",
    "turn"
  ],
  "author": {
    "name": "Damon Oehlman",
    "email": "damon.oehlman@gmail.com"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/DamonOehlman/freeice/issues"
  },
  "homepage": "https://github.com/DamonOehlman/freeice",
  "devDependencies": {
    "rtc-quickconnect": "^4.1.1",
    "stun": "0.0.2",
    "tape": "^3.4.0"
  },
  "dependencies": {
    "normalice": "^1.0.0"
  },
  "readme": "# freeice\n\nThe `freeice` module is a simple way of getting random STUN or TURN server\nfor your WebRTC application.  The list of servers (just STUN at this stage)\nwere sourced from this [gist](https://gist.github.com/zziuni/3741933).\n\n\n[![NPM](https://nodei.co/npm/freeice.png)](https://nodei.co/npm/freeice/)\n\n[![unstable](https://img.shields.io/badge/stability-unstable-yellowgreen.svg)](https://github.com/dominictarr/stability#unstable) [![Build Status](https://img.shields.io/travis/DamonOehlman/freeice.svg?branch=master)](https://travis-ci.org/DamonOehlman/freeice) \n\n## Example Use\n\nThe following demonstrates how you can use `freeice` with\n[rtc-quickconnect](https://github.com/rtc-io/rtc-quickconnect):\n\n```js\nvar freeice = require('freeice');\nvar quickconnect = require('rtc-quickconnect');\n\n// initialise a configuration for one stun server\nvar qcOpts = {\n  room: 'icetest',\n  iceServers: freeice()\n};\n\n// go ahead and connect\nquickconnect('http://rtc.io/switchboard', qcOpts)\n  .createDataChannel('chat')\n  .once('channel:opened:chat', function(peerId, dc) {\n    console.log('data channel opened for peer id: ' + peerId);\n\n    dc.onmessage = function(evt) {\n      console.log('peer ' + peerId + ' says: ' + evt.data);\n    };\n\n    dc.send('hi');\n  });\n\n```\n\nAs the `freeice` module generates ice servers in a list compliant with the\nWebRTC spec you will be able to use it with raw `RTCPeerConnection`\nconstructors and other WebRTC libraries.\n\n## Hey, don't use my STUN/TURN server!\n\nIf for some reason your free STUN or TURN server ends up in the\nlist of servers ([stun](https://github.com/DamonOehlman/freeice/blob/master/stun.json) or\n[turn](https://github.com/DamonOehlman/freeice/blob/master/turn.json))\nthat is used in this module, you can feel\nfree to open an issue on this repository and those servers will be removed\nwithin 24 hours (or sooner).  This is the quickest and probably the most\npolite way to have something removed (and provides us some visibility\nif someone opens a pull request requesting that a server is added).\n\n## Please add my server!\n\nIf you have a server that you wish to add to the list, that's awesome! I'm\nsure I speak on behalf of a whole pile of WebRTC developers who say thanks.\nTo get it into the list, feel free to either open a pull request or if you\nfind that process a bit daunting then just create an issue requesting\nthe addition of the server (make sure you provide all the details, and if\nyou have a Terms of Service then including that in the PR/issue would be\nawesome).\n\n## I know of a free server, can I add it?\n\nSure, if you do your homework and make sure it is ok to use (I'm currently\nin the process of reviewing the terms of those STUN servers included from\nthe original list).  If it's ok to go, then please see the previous entry\nfor how to add it.\n\n## Current List of Servers\n\n* current as at the time of last `README.md` file generation\n\n### STUN\n\n```json\n[\n  \"stun.l.google.com:19302\",\n  \"stun1.l.google.com:19302\",\n  \"stun2.l.google.com:19302\",\n  \"stun3.l.google.com:19302\",\n  \"stun4.l.google.com:19302\",\n  \"stun.ekiga.net\",\n  \"stun.ideasip.com\",\n  \"stun.rixtelecom.se\",\n  \"stun.schlund.de\",\n  \"stun.stunprotocol.org:3478\",\n  \"stun.voiparound.com\",\n  \"stun.voipbuster.com\",\n  \"stun.voipstunt.com\",\n  \"stun.voxgratia.org\"\n]\n\n```\n\n### TURN\n\n```json\n[]\n\n```\n\n## License(s)\n\n### MIT\n\nCopyright (c) 2014 Damon Oehlman <damon.oehlman@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
  "readmeFilename": "README.md",
  "_id": "freeice@2.2.0",
  "_shasum": "f9d2b3b2967c0b9d5af3f1453d35df5e86d517c3",
  "_resolved": "https://registry.npmjs.org/freeice/-/freeice-2.2.0.tgz",
  "_from": "freeice@>=2.1.2 <3.0.0"
}
